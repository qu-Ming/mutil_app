import 'dart:math';

import 'package:flutter/material.dart';

import '../../components/text_component.dart';
import '../../components/textfield_component.dart';
import '../../utils/const/app_colors.dart';
import '../../utils/const/app_dimens.dart';

class RandomTab extends StatefulWidget {
  const RandomTab({Key? key}) : super(key: key);

  @override
  State<RandomTab> createState() => _RandomState();
}

String title = 'Random';
int number = 0;

class _RandomState extends State<RandomTab> {
  @override
  Widget build(BuildContext context) {
    TextEditingController fNum = TextEditingController();
    TextEditingController lNum = TextEditingController();
    String firstNum = 'Nh·∫≠p s·ªë ƒë·∫ßu';
    String lastNum = 'Nh·∫≠p s·ªë cu·ªëi';
    return Scaffold(
      backgroundColor: AppColors.colorPink4,
      body: SafeArea(
        child: SingleChildScrollView(
          child: Column(
            children: [
              Container(
                height: 150.0,
                width: double.infinity,
                decoration: const BoxDecoration(
                    color: AppColors.colorPink,
                    borderRadius:
                        BorderRadius.only(bottomLeft: Radius.circular(12))),
                child: Center(
                  child: TextComponent(
                    maxLines: 5,
                    colorText: AppColors.colorWhite,
                    text: title,
                    textSize: AppDimens.textSize_22,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.only(
                  top: 30.0,
                  left: 50.0,
                  right: 50.0,
                ),
                child: TextFieldComponent(
                  textEditingController: fNum,
                  text: firstNum.isEmpty ? 'L·ªói' : firstNum,
                  textInputType: TextInputType.number,
                ),
              ),
              Padding(
                padding: const EdgeInsets.only(
                  left: 50.0,
                  right: 50.0,
                ),
                child: TextFieldComponent(
                  textEditingController: lNum,
                  text: lastNum,
                  textInputType: TextInputType.number,
                ),
              ),
              GestureDetector(
                onTap: (() {
                  setState(
                    () {
                      if (fNum.text.isEmpty || lNum.text.isEmpty) {
                        title = 'H√¥ng b·ªè tr·ªëng';
                      } else {
                        clickedRandom(
                            int.parse(fNum.text), int.parse(lNum.text));
                        FocusManager.instance.primaryFocus?.unfocus();
                      }
                    },
                  );
                }),
                child: Container(
                  margin: const EdgeInsets.symmetric(
                      horizontal: 50.0, vertical: 20.0),
                  height: 40.0,
                  width: double.infinity,
                  decoration: BoxDecoration(
                    color: AppColors.colorPink,
                    borderRadius: BorderRadius.circular(4),
                  ),
                  child: const Center(
                    child: TextComponent(
                      textSize: AppDimens.textSize_20,
                      text: 'X√°c nh·∫≠n',
                      colorText: AppColors.colorWhite,
                    ),
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.symmetric(vertical: 30.0),
                child: AnimatedSwitcher(
                  duration: const Duration(milliseconds: 100),
                  transitionBuilder:
                      (Widget child, Animation<double> animation) {
                    return ScaleTransition(
                      scale: animation,
                      child: child,
                    );
                  },
                  child: Text(
                    number.toString(),
                    key: ValueKey(number),
                    style: const TextStyle(
                        color: AppColors.colorPink,
                        fontSize: 30.0,
                        fontWeight: FontWeight.bold,
                        fontFamily: "Montserrat"),
                  ),
                ),
              ),
              ElevatedButton(
                style: ButtonStyle(
                    backgroundColor:
                        MaterialStateProperty.all(AppColors.colorPink)),
                onPressed: () {
                  setState(() {
                    onPress();
                  });
                },
                child: const TextComponent(
                  text: '+',
                  colorText: AppColors.colorWhite,
                  fontWeight: FontWeight.w500,
                  textSize: 15.0,
                ),
              ),
              ElevatedButton(
                style: ButtonStyle(
                    backgroundColor:
                        MaterialStateProperty.all(AppColors.colorGrey2)),
                onPressed: () {
                  setState(() {
                    onPress1();
                  });
                },
                child: const TextComponent(
                  text: '-',
                  colorText: AppColors.colorWhite,
                  fontWeight: FontWeight.w500,
                  textSize: 15.0,
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  void clickedRandom(int min, int max) {
    if (min < 0 || max < 0) {
      title = 'Kh√¥ng ch·ªçn s·ªë √¢m';
    } else if (max - min < 0) {
      title = 'S·ªë ƒë·∫ßu b·ª± h∆°n s·ªë cu·ªëi';
    } else if (min > 10000 || max > 10000) {
      title = 'S·ªë b·ª± qu√°';
    } else {
      title = ((min + Random().nextInt((max + 1) - min))).toString();
    }
  }
}

onPress() {
  number = number + 1;
  // number = 2000;
  if (number == 50) {
    title = 'Nice';
  } else if (number == 100) {
    title = 'Wow';
  } else if (number == 200) {
    title = 'Gh√™ gh√™ gh√™';
  } else if (number == 500) {
    title = '√îng ho√†ng r·∫£nh r·ªói';
  } else if (number == 750) {
    title = 'Huy·ªÅn tho·∫°i l√† ƒë√¢y';
  } else if (number == 912) {
    title = 'Moazzzzzzzzzz';
  } else if (number == 1000) {
    title = 'I LOVE YOU 3000';
  } else if (number == 1250) {
    title = 'Y√™u em Ng√¢n ƒë·ªì da';
  } else if (number == 1500) {
    title = 'Em l√† l√Ω t∆∞·ªüng s·ªëng\nc·ªßa ƒë·ªùi anh';
  } else if (number == 1750) {
    title =
        'Thanks t·∫°o h√≥a ban cho anh ƒë√¥i m·∫Øt üëÄ ƒë·ªÉ anh c√≥ th·ªÉ ng·∫Øm em m·ªói ng√†y ü§ç m√£i y√™u em moazzz';
  } else if (number == 2000) {
    title =
        'Tuy anh h∆°i b·∫≠n kh√¥ng gi√†nh th·ªùi gian cho em ƒë∆∞·ª£c nh∆∞ng sau n√†y anh mu·ªën em s·ªëng kh√¥ng thi·∫øu g√¨ ·∫° huhu em v·∫•t v·∫£ r·ªìi\nAnh th∆∞∆°ng em ·∫° ü§ç';
  }
}

onPress1() {
  number = number - 1;
  if (number == -20) {
    title = 'L·ªëi ƒëi ri√™ng';
  } else if (number == -40) {
    title = ':))))))) em v·∫´n c√≤n b·∫•m √†';
  } else if (number == -40) {
    title = ':))))))) c·ªë ch·∫•p th·∫ø';
  } else if (number == -60) {
    title = ':)))))))))))))))))))))))))';
  } else if (number == -80) {
    title = 'Anh y√™u b√© üòç';
  } else if (number == -100) {
    title = 'H·∫øt r·ªìi b√°c 2';
  } else if (number == -120) {
    title = 'C·ªë ch·∫•p th·∫ø üôÇ';
  } else if (number == -140) {
    title = 'H·∫øt thi·ªát r·ªìi b√°c üôÇ';
  } else if (number == -160) {
    title = 'qq h·∫øt r·ªìi e b·∫•m n·ªØa t·ªën th·ªùi gian r√°ng ch·ªãu üôÇ';
  }
}
